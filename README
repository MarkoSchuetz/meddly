
$Id$

To create a branch or a tag: copy the entire "trunk" subdirectory to
an appropriately-named subdirectory at the same level.

Subdirectories:
---------------

docs/     Generated docs from source code
examples/ Stand-alone applications that use the library
src/      Library source code
tests/    Test applications used by "make check"

Building the library:
---------------------

You will need g++, autoconf, automake and libtool.

0. If you obtained the library via svn:
   $ ./autogen.sh
   This will create the configure script and Makefiles.

1. $ ./configure
   This will setup the build files.
   Can be used to set various compile options; 
   see "Configuration Options" below.
   An alternate would be:
   $ ./configure --prefix=$PWD
   (See "make install" further down for reasons).

2. $ make
   Build the library.
   Library will be in src/. Applications in src/ and examples/. This may be
   sufficient for most users.

3. $ make install
   Library in /usr/lib/. Applications in /usr/bin/. This can be changed
   in step (1) by selecting an alternate location. If you reconfigure,
   make sure you run "make clean" before running "make".

4. $ make uninstall
   Removes the files installed in bin/ and lib/.

5. $ make clean
   Removes the results of compilation from src/ and examples/.

Build the documentation:
------------------------

0. Need to have doxygen installed.

1. $ cd docs

2. If you see docs/html/index.html and docs/refman.pdf, your docs have
   already been built and you can ignore the rest of the steps. Otherwise:
   $ make
   This will create the folders docs/html and docs/latex.
   docs/html: HTML documentation. See index.html.
   docs/latex: Tex-based documentation. See refman.tex.
     If you have latex installed:
     a. $ cd latex
     b. $ make
        This will create refman.dvi.
     c. $ make pdf
        This will create refman.pdf (using ps2pdf).

3. $ make clean
   Removes docs/ and html/.


Configuration Options
---------------------
Several environment variables may be set before running configure.
For example, to build an optimized version of the library:

$ CXXFLAGS="-O3"
$ export CXXFLAGS 
$ ./configure

To build an optimized, 64-bit version of the library:

$ CXXFLAGS="-m64 -O3"
$ export CXXFLAGS
$ ./configure

To build a debuggable version of the library:

$ CPPFLAGS="-DDEVELOPMENT_CODE"
$ CXXFLAGS="-ggdb"
$ export CPPFLAGS CXXFLAGS
$ ./configure

To set the location of the gmp library, by hand 
(only necessary if ./configure fails to find it):

$ CPPFLAGS="-I/path-to-gmp-header"
$ LDFLAGS="-L/path-to-gmp-lib"
$ export CPPFLAGS LDFLAGS
$ ./configure

To disable gmp support in Meddly:

$ ./configure --without-gmp

